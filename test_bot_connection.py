#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞ –∫ Telegram API
"""

import asyncio
import aiohttp
from config import TELEGRAM_TOKEN

async def test_bot_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞ –∫ Telegram API"""
    print("üîç –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞ –∫ Telegram API")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
    print("1. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ...")
    try:
        async with aiohttp.ClientSession() as session:
            url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/getMe"
            async with session.get(url) as response:
                if response.status == 200:
                    data = await response.json()
                    if data.get('ok'):
                        bot_info = data['result']
                        print(f"‚úÖ –ë–æ—Ç –Ω–∞–π–¥–µ–Ω: {bot_info['first_name']} (@{bot_info['username']})")
                        print(f"   ID: {bot_info['id']}")
                        print(f"   –ú–æ–∂–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å—Å—è –∫ –≥—Ä—É–ø–ø–∞–º: {bot_info.get('can_join_groups', False)}")
                        print(f"   –ú–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≥—Ä—É–ø–ø: {bot_info.get('can_read_all_group_messages', False)}")
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ API: {data.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                        return False
                else:
                    print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status}")
                    return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...")
    try:
        async with aiohttp.ClientSession() as session:
            url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/getUpdates"
            async with session.get(url) as response:
                if response.status == 200:
                    data = await response.json()
                    if data.get('ok'):
                        updates = data['result']
                        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {len(updates)}")
                        if updates:
                            print("   –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
                            for update in updates[-3:]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3
                                update_id = update.get('update_id')
                                message = update.get('message', {})
                                user = message.get('from', {})
                                text = message.get('text', '–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞')
                                print(f"   - ID: {update_id}, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.get('first_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}, –¢–µ–∫—Å—Ç: {text[:50]}...")
                        else:
                            print("   –û–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ—Ç")
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ API: {data.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                        return False
                else:
                    print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status}")
                    return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {e}")
        return False
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook...")
    try:
        async with aiohttp.ClientSession() as session:
            url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/getWebhookInfo"
            async with session.get(url) as response:
                if response.status == 200:
                    data = await response.json()
                    if data.get('ok'):
                        webhook_info = data['result']
                        if webhook_info.get('url'):
                            print(f"‚ö†Ô∏è  Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_info['url']}")
                            print("   –≠—Ç–æ –º–æ–∂–µ—Ç –º–µ—à–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ polling")
                        else:
                            print("‚úÖ Webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - polling –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å")
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ API: {data.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                else:
                    print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook: {e}")
    
    print("\nüéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –±–æ—Ç—É")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –±–æ—Ç –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
    print("3. –ï—Å–ª–∏ webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —É–¥–∞–ª–∏—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π:")
    print(f"   curl -X POST https://api.telegram.org/bot{TELEGRAM_TOKEN}/deleteWebhook")
    
    return True

if __name__ == "__main__":
    asyncio.run(test_bot_connection()) 