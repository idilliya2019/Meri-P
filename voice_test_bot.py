#!/usr/bin/env python3
"""
–ë–æ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
"""

import logging
from telegram import Update
from telegram.ext import Application, MessageHandler, filters, ContextTypes
from config import TELEGRAM_TOKEN

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.DEBUG
)
logger = logging.getLogger(__name__)

async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    logger.info(f"=== –¢–ï–ö–°–¢–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï ===")
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {update.effective_user.first_name}")
    logger.info(f"–¢–µ–∫—Å—Ç: {update.message.text}")
    await update.message.reply_text(f"‚úÖ –¢–µ–∫—Å—Ç –ø–æ–ª—É—á–µ–Ω: {update.message.text}")

async def handle_voice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    logger.info(f"=== –ì–û–õ–û–°–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï ===")
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {update.effective_user.first_name}")
    
    if update.message.voice:
        voice = update.message.voice
        logger.info(f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {voice.duration} —Å–µ–∫")
        logger.info(f"–†–∞–∑–º–µ—Ä: {voice.file_size} –±–∞–π—Ç")
        logger.info(f"MIME —Ç–∏–ø: {voice.mime_type}")
        logger.info(f"File ID: {voice.file_id}")
        
        await update.message.reply_text(
            f"üé§ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!\n"
            f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {voice.duration} —Å–µ–∫\n"
            f"–†–∞–∑–º–µ—Ä: {voice.file_size} –±–∞–π—Ç\n"
            f"–¢–∏–ø: {voice.mime_type}"
        )
    else:
        logger.warning("–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö voice")
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")

async def handle_audio(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    logger.info(f"=== –ê–£–î–ò–û –°–û–û–ë–©–ï–ù–ò–ï ===")
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {update.effective_user.first_name}")
    
    if update.message.audio:
        audio = update.message.audio
        logger.info(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {audio.title}")
        logger.info(f"–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {audio.performer}")
        logger.info(f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {audio.duration} —Å–µ–∫")
        logger.info(f"–†–∞–∑–º–µ—Ä: {audio.file_size} –±–∞–π—Ç")
        logger.info(f"MIME —Ç–∏–ø: {audio.mime_type}")
        
        await update.message.reply_text(
            f"üéµ –ê—É–¥–∏–æ —Ñ–∞–π–ª –ø–æ–ª—É—á–µ–Ω!\n"
            f"–ù–∞–∑–≤–∞–Ω–∏–µ: {audio.title or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
            f"–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {audio.performer or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
            f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {audio.duration} —Å–µ–∫"
        )
    else:
        logger.warning("–ê—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö audio")
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞")

async def handle_document(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    logger.info(f"=== –î–û–ö–£–ú–ï–ù–¢ ===")
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {update.effective_user.first_name}")
    
    if update.message.document:
        doc = update.message.document
        logger.info(f"–ò–º—è —Ñ–∞–π–ª–∞: {doc.file_name}")
        logger.info(f"–†–∞–∑–º–µ—Ä: {doc.file_size} –±–∞–π—Ç")
        logger.info(f"MIME —Ç–∏–ø: {doc.mime_type}")
        
        await update.message.reply_text(
            f"üìé –î–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—É—á–µ–Ω!\n"
            f"–ò–º—è: {doc.file_name}\n"
            f"–†–∞–∑–º–µ—Ä: {doc.file_size} –±–∞–π—Ç\n"
            f"–¢–∏–ø: {doc.mime_type}"
        )

async def handle_all_messages(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    logger.info(f"=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–û–û–ë–©–ï–ù–ò–Ø ===")
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {update.effective_user.first_name}")
    logger.info(f"–¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è: {type(update.message)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ç–∏–ø—ã
    message_types = []
    if update.message.text: 
        message_types.append("text")
        logger.info(f"–¢–µ–∫—Å—Ç: {update.message.text}")
    if update.message.voice: 
        message_types.append("voice")
        logger.info(f"Voice: {update.message.voice}")
    if update.message.audio: 
        message_types.append("audio")
        logger.info(f"Audio: {update.message.audio}")
    if update.message.document: 
        message_types.append("document")
        logger.info(f"Document: {update.message.document}")
    if update.message.photo: 
        message_types.append("photo")
        logger.info(f"Photo: {update.message.photo}")
    if update.message.video: 
        message_types.append("video")
        logger.info(f"Video: {update.message.video}")
    if update.message.sticker: 
        message_types.append("sticker")
        logger.info(f"Sticker: {update.message.sticker}")
    if update.message.animation: 
        message_types.append("animation")
        logger.info(f"Animation: {update.message.animation}")
    
    logger.info(f"–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã: {message_types}")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
    if "text" in message_types:
        await update.message.reply_text(f"‚úÖ –¢–µ–∫—Å—Ç –ø–æ–ª—É—á–µ–Ω: {update.message.text}")
    elif "voice" in message_types:
        voice = update.message.voice
        await update.message.reply_text(
            f"üé§ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!\n"
            f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {voice.duration} —Å–µ–∫\n"
            f"–†–∞–∑–º–µ—Ä: {voice.file_size} –±–∞–π—Ç\n"
            f"–¢–∏–ø: {voice.mime_type}"
        )
    elif "audio" in message_types:
        audio = update.message.audio
        await update.message.reply_text(
            f"üéµ –ê—É–¥–∏–æ —Ñ–∞–π–ª –ø–æ–ª—É—á–µ–Ω!\n"
            f"–ù–∞–∑–≤–∞–Ω–∏–µ: {audio.title or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
            f"–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {audio.performer or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
            f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {audio.duration} —Å–µ–∫"
        )
    else:
        await update.message.reply_text(f"üìé –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ. –¢–∏–ø—ã: {message_types}")

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        print("ü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...")
        print("üì± –ò–º—è –±–æ—Ç–∞: @psihologiny333959_bot")
        print("üé§ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        print("üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è")
        print("üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        application = Application.builder().token(TELEGRAM_TOKEN).build()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–¥–∏–Ω —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        application.add_handler(MessageHandler(filters.ALL, handle_all_messages))
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        application.run_polling(allowed_updates=Update.ALL_TYPES)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == '__main__':
    main() 