#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
"""

import speech_recognition as sr
from pydub import AudioSegment
import os

def test_speech_recognition():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏"""
    print("üé§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∞—É–¥–∏–æ—Ñ–∞–π–ª
    test_text = "–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
    
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        from gtts import gTTS
        tts = gTTS(text=test_text, lang="ru", slow=False)
        tts.save("test_audio.mp3")
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∞—É–¥–∏–æ—Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω")
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ wav
        audio = AudioSegment.from_mp3("test_audio.mp3")
        audio.export("test_audio.wav", format="wav")
        print("‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ WAV –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ
        recognizer = sr.Recognizer()
        with sr.AudioFile("test_audio.wav") as source:
            print("üéß –ó–∞–≥—Ä—É–∂–∞—é –∞—É–¥–∏–æ—Ñ–∞–π–ª...")
            audio_data = recognizer.record(source)
            print("üéß –ê—É–¥–∏–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ, —Ä–∞—Å–ø–æ–∑–Ω–∞—é —Ä–µ—á—å...")
            
            text = recognizer.recognize_google(audio_data, language="ru-RU")
            print(f"‚úÖ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: '{text}'")
            
            if test_text.lower() in text.lower():
                print("‚úÖ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            else:
                print("‚ö†Ô∏è  –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ —Ç–æ—á–Ω–æ—Å—Ç—å –Ω–∏–∑–∫–∞—è")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        print(f"–¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
        if "ffmpeg" in str(e).lower():
            print("üí° –ü—Ä–æ–±–ª–µ–º–∞ —Å ffmpeg. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ffmpeg:")
            print("Windows: —Å–∫–∞—á–∞–π—Ç–µ —Å https://ffmpeg.org/download.html")
            print("–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: pip install ffmpeg-python")
        elif "google" in str(e).lower():
            print("üí° –ü—Ä–æ–±–ª–µ–º–∞ —Å Google Speech Recognition")
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
        elif "audio" in str(e).lower():
            print("üí° –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–º")
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º")
    
    finally:
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
        for file in ["test_audio.mp3", "test_audio.wav"]:
            try:
                if os.path.exists(file):
                    os.remove(file)
            except:
                pass

def test_audio_formats():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∞—É–¥–∏–æ—Ñ–æ—Ä–º–∞—Ç–æ–≤"""
    print("\nüéµ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ—Ñ–æ—Ä–º–∞—Ç–æ–≤...")
    
    formats = ['mp3', 'wav', 'ogg', 'm4a']
    
    for format in formats:
        try:
            if format == 'mp3':
                audio = AudioSegment.from_mp3("test_audio.mp3")
            elif format == 'wav':
                audio = AudioSegment.from_wav("test_audio.wav")
            elif format == 'ogg':
                audio = AudioSegment.from_ogg("test_audio.ogg")
            elif format == 'm4a':
                audio = AudioSegment.from_file("test_audio.m4a", format="m4a")
                
            print(f"‚úÖ –§–æ—Ä–º–∞—Ç {format} –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è")
        except Exception as e:
            print(f"‚ùå –§–æ—Ä–º–∞—Ç {format} –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è: {e}")

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    print("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    dependencies = [
        ('speech_recognition', 'sr'),
        ('pydub', 'AudioSegment'),
        ('gtts', 'gTTS'),
        ('aiohttp', 'aiohttp')
    ]
    
    for package, import_name in dependencies:
        try:
            __import__(import_name)
            print(f"‚úÖ {package} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except ImportError:
            print(f"‚ùå {package} –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == "__main__":
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π")
    print("=" * 50)
    
    check_dependencies()
    test_speech_recognition()
    test_audio_formats()
    
    print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ ffmpeg —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
    print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –º–∏–∫—Ä–æ—Ñ–æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≥–æ–≤–æ—Ä–∏—Ç—å —á–µ—Ç–∫–æ –∏ –≥—Ä–æ–º–∫–æ") 