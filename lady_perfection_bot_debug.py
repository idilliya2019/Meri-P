import logging
import json
import aiohttp
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler, CallbackQueryHandler
from config import TELEGRAM_TOKEN, DEEPSEEK_API_KEY, DEEPSEEK_API_URL, SYSTEM_PROMPT
import speech_recognition as sr
from pydub import AudioSegment
from gtts import gTTS
import os
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.DEBUG  # –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ DEBUG –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
)
logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
WAITING_NAME = 0

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è callback_data
EMERGENCY_HELP = "emergency_help"
MENU_PSYCHOLOGY = "menu_psychology"
MENU_NUTRITION = "menu_nutrition"
MENU_COOKING = "menu_cooking"
MENU_FITNESS = "menu_fitness"
MENU_STATS = "menu_stats"
MENU_SETTINGS = "menu_settings"

async def get_deepseek_response(messages):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç DeepSeek API"""
    headers = {
        "Authorization": f"Bearer {DEEPSEEK_API_KEY}",
        "Content-Type": "application/json"
    }
    
    data = {
        "model": "deepseek-chat",
        "messages": [
            {"role": "system", "content": SYSTEM_PROMPT},
            *messages
        ],
        "temperature": 0.7,
        "max_tokens": 1000
    }
    
    try:
        async with aiohttp.ClientSession() as session:
            async with session.post(DEEPSEEK_API_URL, headers=headers, json=data) as response:
                if response.status == 200:
                    result = await response.json()
                    return result["choices"][0]["message"]["content"]
                else:
                    logger.error(f"–û—à–∏–±–∫–∞ API: {response.status}")
                    return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ API: {e}")
        return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∞–ª–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –∏ –∑–∞–ø—Ä–æ—Å –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –ú—ç—Ä–∏ –ü–æ–ø–∏–Ω—Å
        with open('–ú–µ—Ä–∏ –ü–æ–ø–∏–Ω—Å —Å–∂–∞—Ç.jpg', 'rb') as photo:
            await update.message.reply_photo(photo)
    except FileNotFoundError:
        logger.warning("–§–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω")
        pass
    
    welcome_message = (
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –¥–æ—Ä–æ–≥–∞—è! –Ø - –õ–µ–¥–∏ –°–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ –ú—ç—Ä–∏ –ü.\n"
        "–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —ç–∫—Å–ø–µ—Ä—Ç –≤ –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏, –ø–∏—Ç–∞–Ω–∏–∏ –∏ —Ñ–∏—Ç–Ω–µ—Å–µ.\n"
        "–ö–∞–∫ –º–Ω–µ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?"
    )
    await update.message.reply_text(welcome_message)
    return WAITING_NAME

async def handle_name(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞—á–∞–ª–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞."""
    user_name = update.message.text
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} —É–∫–∞–∑–∞–ª –∏–º—è: {user_name}")
    context.user_data['name'] = user_name
    context.user_data['messages'] = []
    context.user_data['start_time'] = datetime.now()
    context.user_data['message_count'] = 0
    
    # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
    keyboard = [
        [InlineKeyboardButton("üß† –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è", callback_data=MENU_PSYCHOLOGY)],
        [InlineKeyboardButton("ü•ó –ü–∏—Ç–∞–Ω–∏–µ", callback_data=MENU_NUTRITION)],
        [InlineKeyboardButton("üë®‚Äçüç≥ –ö—É–ª–∏–Ω–∞—Ä–∏—è", callback_data=MENU_COOKING)],
        [InlineKeyboardButton("üí™ –§–∏—Ç–Ω–µ—Å", callback_data=MENU_FITNESS)],
        [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data=MENU_STATS)],
        [InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data=MENU_SETTINGS)],
        [InlineKeyboardButton("üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å", callback_data=EMERGENCY_HELP)]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    response = (
        f"–û—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {user_name}! –Ø –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å –≤–∞–º –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö:\n\n"
        "üß† –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏\n"
        "ü•ó –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è\n"
        "üë®‚Äçüç≥ –ö—É–ª–∏–Ω–∞—Ä–Ω—ã–µ —Å–æ–≤–µ—Ç—ã\n"
        "üí™ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –≤–∞—Å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å!"
    )
    await update.message.reply_text(response, reply_markup=reply_markup)
    return ConversationHandler.END

async def handle_menu_selection(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é."""
    query = update.callback_query
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –≤—ã–±—Ä–∞–ª –º–µ–Ω—é: {query.data}")
    await query.answer()
    
    if query.data == MENU_PSYCHOLOGY:
        response = (
            "üß† –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏\n\n"
            "–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å:\n"
            "‚Ä¢ –ê–Ω–∞–ª–∏–∑–æ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è\n"
            "‚Ä¢ –†–∞–±–æ—Ç–æ–π —Å–æ —Å—Ç—Ä–µ—Å—Å–æ–º –∏ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å—é\n"
            "‚Ä¢ –£–ª—É—á—à–µ–Ω–∏–µ–º –æ—Ç–Ω–æ—à–µ–Ω–∏–π\n"
            "‚Ä¢ –ü–æ–≤—ã—à–µ–Ω–∏–µ–º —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏\n"
            "‚Ä¢ –ü–æ—Å—Ç–∞–Ω–æ–≤–∫–æ–π —Ü–µ–ª–µ–π –∏ –∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ–º\n\n"
            "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç, –∏ —è –¥–∞–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å–æ–≤–µ—Ç."
        )
    elif query.data == MENU_NUTRITION:
        response = (
            "ü•ó –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è\n\n"
            "–Ø —Å–æ—Å—Ç–∞–≤–ª—é –¥–ª—è –≤–∞—Å:\n"
            "‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ä–∞—Ü–∏–æ–Ω –ø–∏—Ç–∞–Ω–∏—è\n"
            "‚Ä¢ –ü–ª–∞–Ω –¥–ª—è –ø–æ—Ö—É–¥–µ–Ω–∏—è –∏–ª–∏ –Ω–∞–±–æ—Ä–∞ –≤–µ—Å–∞\n"
            "‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∑–¥–æ—Ä–æ–≤–æ–º—É –ø–∏—Ç–∞–Ω–∏—é\n"
            "‚Ä¢ –ú–µ–Ω—é —Å —É—á–µ—Ç–æ–º –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π\n\n"
            "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–∏—Ö —Ü–µ–ª—è—Ö –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è—Ö –≤ –µ–¥–µ."
        )
    elif query.data == MENU_COOKING:
        response = (
            "üë®‚Äçüç≥ –ö—É–ª–∏–Ω–∞—Ä–Ω—ã–µ —Å–æ–≤–µ—Ç—ã\n\n"
            "–Ø –ø–æ–¥–µ–ª—é—Å—å —Å –≤–∞–º–∏:\n"
            "‚Ä¢ –†–µ—Ü–µ–ø—Ç–∞–º–∏ –≤–∫—É—Å–Ω—ã—Ö –∏ –ø–æ–ª–µ–∑–Ω—ã—Ö –±–ª—é–¥\n"
            "‚Ä¢ –°–µ–∫—Ä–µ—Ç–∞–º–∏ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è\n"
            "‚Ä¢ –°–æ–≤–µ—Ç–∞–º–∏ –ø–æ –≤—ã–±–æ—Ä—É –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n"
            "‚Ä¢ –ò–¥–µ—è–º–∏ –¥–ª—è –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–≥–æ –º–µ–Ω—é\n\n"
            "–ß—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å?"
        )
    elif query.data == MENU_FITNESS:
        response = (
            "üí™ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n\n"
            "–Ø —Ä–∞–∑—Ä–∞–±–æ—Ç–∞—é –¥–ª—è –≤–∞—Å:\n"
            "‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n"
            "‚Ä¢ –ü–ª–∞–Ω –¥–ª—è –ø–æ—Ö—É–¥–µ–Ω–∏—è –∏–ª–∏ –Ω–∞–±–æ—Ä–∞ –º—ã—à–µ—á–Ω–æ–π –º–∞—Å—Å—ã\n"
            "‚Ä¢ –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è –¥–æ–º–∞ –∏–ª–∏ –∑–∞–ª–∞\n"
            "‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é\n\n"
            "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–º —É—Ä–æ–≤–Ω–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∏ —Ü–µ–ª—è—Ö."
        )
    elif query.data == MENU_STATS:
        user_name = context.user_data.get('name', '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
        message_count = context.user_data.get('message_count', 0)
        start_time = context.user_data.get('start_time', datetime.now())
        duration = datetime.now() - start_time
        
        response = (
            f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è {user_name}\n\n"
            f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–π: {message_count}\n"
            f"‚è±Ô∏è –í—Ä–µ–º—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: {duration.days} –¥–Ω–µ–π, {duration.seconds // 3600} —á–∞—Å–æ–≤\n"
            f"üéØ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è: –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è, –ü–∏—Ç–∞–Ω–∏–µ, –ö—É–ª–∏–Ω–∞—Ä–∏—è, –§–∏—Ç–Ω–µ—Å\n\n"
            "–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏!"
        )
    elif query.data == MENU_SETTINGS:
        response = (
            "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏:\n"
            "‚Ä¢ –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è\n"
            "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n"
            "‚Ä¢ –°–±—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏\n"
            "‚Ä¢ –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏\n\n"
            "–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ."
        )
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    keyboard = [
        [InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")],
        [InlineKeyboardButton("üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å", callback_data=EMERGENCY_HELP)]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.message.reply_text(response, reply_markup=reply_markup)

async def handle_emergency_help(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –ø–æ–º–æ—â–∏."""
    query = update.callback_query
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª —ç–∫—Å—Ç—Ä–µ–Ω–Ω—É—é –ø–æ–º–æ—â—å")
    await query.answer()
    
    emergency_message = (
        "üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å\n\n"
        "–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ —Å—Ä–æ—á–Ω–∞—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –≥–æ—Ä—è—á—É—é –ª–∏–Ω–∏—é:\n\n"
        "üìû 8-800-333-44-34\n\n"
        "–ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ, –±–µ—Å–ø–ª–∞—Ç–Ω–æ, –∞–Ω–æ–Ω–∏–º–Ω–æ.\n"
        "–ù–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –≥–æ—Ç–æ–≤—ã –≤—ã—Å–ª—É—à–∞—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –≤–∞—Å –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.\n\n"
        "–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ:\n"
        "‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –ø—Å–∏—Ö–æ–ª–æ–≥—É –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ\n"
        "‚Ä¢ –ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å –±–ª–∏–∑–∫–∏–º–∏ –ª—é–¥—å–º–∏\n"
        "‚Ä¢ –í—ã–ø–æ–ª–Ω–∏—Ç—å –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è\n"
        "‚Ä¢ –ü—Ä–æ–≥—É–ª—è—Ç—å—Å—è –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ"
    )
    
    keyboard = [
        [InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")],
        [InlineKeyboardButton("üí¨ –ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å–æ –º–Ω–æ–π", callback_data="talk_to_mary")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.message.reply_text(emergency_message, reply_markup=reply_markup)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º DeepSeek."""
    user_message = update.message.text
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {update.effective_user.id}: {user_message[:50]}...")
    
    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
    context.user_data['message_count'] = context.user_data.get('message_count', 0) + 1
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
    if 'messages' not in context.user_data:
        context.user_data['messages'] = []
    
    context.user_data['messages'].append({
        "role": "user",
        "content": user_message
    })
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç DeepSeek
    response = await get_deepseek_response(context.user_data['messages'])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é
    context.user_data['messages'].append({
        "role": "assistant",
        "content": response
    })
    
    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ 10 —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
    if len(context.user_data['messages']) > 10:
        context.user_data['messages'] = context.user_data['messages'][-10:]
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    keyboard = [
        [InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")],
        [InlineKeyboardButton("üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å", callback_data=EMERGENCY_HELP)]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(response, reply_markup=reply_markup)

async def handle_voice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ, DeepSeek, —Å–∏–Ω—Ç–µ–∑ –æ—Ç–≤–µ—Ç–∞."""
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {update.effective_user.id}")
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        processing_msg = await update.message.reply_text("üé§ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
        logger.info("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        file = await update.message.voice.get_file()
        ogg_path = f"voice_{update.message.message_id}.ogg"
        wav_path = f"voice_{update.message.message_id}.wav"
        
        logger.info(f"–°–∫–∞—á–∏–≤–∞—é –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª: {ogg_path}")
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        await file.download_to_drive(ogg_path)
        logger.info("–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∫–∞—á–∞–Ω–æ")
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è ogg –≤ wav
        try:
            logger.info("–ù–∞—á–∏–Ω–∞—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é OGG –≤ WAV")
            audio = AudioSegment.from_ogg(ogg_path)
            audio.export(wav_path, format="wav")
            logger.info("–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∞—É–¥–∏–æ: {e}")
            await processing_msg.edit_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—â–µ —Ä–∞–∑.")
            return

        # –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏
        logger.info("–ù–∞—á–∏–Ω–∞—é —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏")
        recognizer = sr.Recognizer()
        try:
            with sr.AudioFile(wav_path) as source:
                logger.info("–û—Ç–∫—Ä—ã–≤–∞—é –∞—É–¥–∏–æ—Ñ–∞–π–ª –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è")
                # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
                recognizer.adjust_for_ambient_noise(source, duration=0.5)
                audio_data = recognizer.record(source)
                logger.info("–ê—É–¥–∏–æ –∑–∞–ø–∏—Å–∞–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è—é –Ω–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ")
                
                # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å
                text = recognizer.recognize_google(audio_data, language="ru-RU")
                logger.info(f"–†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: '{text}'")
                
                if not text.strip():
                    logger.warning("–†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –ø—É—Å—Ç–æ–π")
                    await processing_msg.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≥–æ–≤–æ—Ä–∏—Ç—å —á–µ—Ç—á–µ –∏ –≥—Ä–æ–º—á–µ.")
                    return
                    
                await processing_msg.edit_text(f"üé§ –í—ã —Å–∫–∞–∑–∞–ª–∏: ¬´{text}¬ª")
                logger.info("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º")
                
        except sr.UnknownValueError:
            logger.error("Google Speech Recognition –Ω–µ —Å–º–æ–≥ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å")
            await processing_msg.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≥–æ–≤–æ—Ä–∏—Ç—å —á–µ—Ç—á–µ –∏ –≥—Ä–æ–º—á–µ.")
            return
        except sr.RequestError as e:
            logger.error(f"–û—à–∏–±–∫–∞ Google Speech Recognition: {e}")
            await processing_msg.edit_text("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
            return
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏: {e}")
            await processing_msg.edit_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–∏ —Ä–µ—á–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
            return

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é –∏ –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç DeepSeek
        logger.info("–ü–æ–ª—É—á–∞—é –æ—Ç–≤–µ—Ç –æ—Ç DeepSeek")
        if 'messages' not in context.user_data:
            context.user_data['messages'] = []
        
        context.user_data['messages'].append({"role": "user", "content": text})
        response = await get_deepseek_response(context.user_data['messages'])
        context.user_data['messages'].append({"role": "assistant", "content": response})
        
        if len(context.user_data['messages']) > 10:
            context.user_data['messages'] = context.user_data['messages'][-10:]

        # –û–∑–≤—É—á–∏–≤–∞–µ–º –æ—Ç–≤–µ—Ç
        logger.info("–ù–∞—á–∏–Ω–∞—é —Å–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏")
        try:
            tts = gTTS(text=response, lang="ru", slow=False)
            mp3_path = f"response_{update.message.message_id}.mp3"
            tts.save(mp3_path)
            logger.info("–°–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏ –∑–∞–≤–µ—Ä—à–µ–Ω")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            with open(mp3_path, "rb") as audio_file:
                await update.message.reply_voice(audio_file, caption="üé§ –û—Ç–≤–µ—Ç –ú—ç—Ä–∏ –ü.")
            logger.info("–ì–æ–ª–æ—Å–æ–≤–æ–π –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
            
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
            try:
                os.remove(mp3_path)
                logger.info("–í—Ä–µ–º–µ–Ω–Ω—ã–π MP3 —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")
            except:
                logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π MP3 —Ñ–∞–π–ª")
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏: {e}")
            # –ï—Å–ª–∏ —Å–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
            await update.message.reply_text("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –æ—Ç–≤–µ—Ç, –Ω–æ –≤–æ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç:")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏
        keyboard = [
            [InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")],
            [InlineKeyboardButton("üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å", callback_data=EMERGENCY_HELP)]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await update.message.reply_text(response, reply_markup=reply_markup)
        logger.info("–¢–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        try:
            os.remove(ogg_path)
            os.remove(wav_path)
            logger.info("–í—Ä–µ–º–µ–Ω–Ω—ã–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã")
        except:
            logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã")
        
    except Exception as e:
        logger.error(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.\n"
            "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n"
            "‚Ä¢ –°–ª–∏—à–∫–æ–º —Ç–∏—Ö–∞—è –∏–ª–∏ –Ω–µ—á–µ—Ç–∫–∞—è —Ä–µ—á—å\n"
            "‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º\n"
            "‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."
        )

async def handle_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    query = update.callback_query
    await query.answer()
    
    keyboard = [
        [InlineKeyboardButton("üß† –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è", callback_data=MENU_PSYCHOLOGY)],
        [InlineKeyboardButton("ü•ó –ü–∏—Ç–∞–Ω–∏–µ", callback_data=MENU_NUTRITION)],
        [InlineKeyboardButton("üë®‚Äçüç≥ –ö—É–ª–∏–Ω–∞—Ä–∏—è", callback_data=MENU_COOKING)],
        [InlineKeyboardButton("üí™ –§–∏—Ç–Ω–µ—Å", callback_data=MENU_FITNESS)],
        [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data=MENU_STATS)],
        [InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data=MENU_SETTINGS)],
        [InlineKeyboardButton("üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å", callback_data=EMERGENCY_HELP)]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.message.edit_text("üîΩ –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –≤–∞—Å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:", reply_markup=reply_markup)

async def handle_talk_to_mary(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å–æ –º–Ω–æ–π'."""
    query = update.callback_query
    await query.answer()
    
    response = (
        "–ö–æ–Ω–µ—á–Ω–æ, –¥–æ—Ä–æ–≥–∞—è! –Ø –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤–∞ –≤—ã—Å–ª—É—à–∞—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –≤–∞—Å.\n\n"
        "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –º–Ω–µ –æ —Ç–æ–º, —á—Ç–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç, –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å. "
        "–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Å–∏—Ç—É–∞—Ü–∏–∏ –∏ –Ω–∞–π—Ç–∏ —Ä–µ—à–µ–Ω–∏–µ.\n\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."
    )
    
    keyboard = [
        [InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")],
        [InlineKeyboardButton("üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å", callback_data=EMERGENCY_HELP)]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.message.reply_text(response, reply_markup=reply_markup)

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏."""
    help_text = (
        "ü§ñ –ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ú—ç—Ä–∏ –ü.\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        "/menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "/stats - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n"
        "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n"
        "‚Ä¢ üí¨ –¢–µ–∫—Å—Ç–æ–≤—ã–π —á–∞—Ç\n"
        "‚Ä¢ üé§ –ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n"
        "‚Ä¢ üß† –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏\n"
        "‚Ä¢ ü•ó –ü–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è\n"
        "‚Ä¢ üë®‚Äçüç≥ –ö—É–ª–∏–Ω–∞—Ä–Ω—ã–µ —Å–æ–≤–µ—Ç—ã\n"
        "‚Ä¢ üí™ –ü—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n"
        "‚Ä¢ üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å\n\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!"
    )
    await update.message.reply_text(help_text)

async def menu_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    keyboard = [
        [InlineKeyboardButton("üß† –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è", callback_data=MENU_PSYCHOLOGY)],
        [InlineKeyboardButton("ü•ó –ü–∏—Ç–∞–Ω–∏–µ", callback_data=MENU_NUTRITION)],
        [InlineKeyboardButton("üë®‚Äçüç≥ –ö—É–ª–∏–Ω–∞—Ä–∏—è", callback_data=MENU_COOKING)],
        [InlineKeyboardButton("üí™ –§–∏—Ç–Ω–µ—Å", callback_data=MENU_FITNESS)],
        [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data=MENU_STATS)],
        [InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data=MENU_SETTINGS)],
        [InlineKeyboardButton("üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å", callback_data=EMERGENCY_HELP)]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text("üîΩ –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –≤–∞—Å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:", reply_markup=reply_markup)

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å polling."""
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        application = Application.builder().token(TELEGRAM_TOKEN).build()

        # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
        conv_handler = ConversationHandler(
            entry_points=[CommandHandler('start', start)],
            states={
                WAITING_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_name)],
            },
            fallbacks=[],
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        application.add_handler(conv_handler)
        application.add_handler(CommandHandler('help', help_command))
        application.add_handler(CommandHandler('menu', menu_command))
        application.add_handler(CallbackQueryHandler(handle_menu_selection, pattern=f"^({MENU_PSYCHOLOGY}|{MENU_NUTRITION}|{MENU_COOKING}|{MENU_FITNESS}|{MENU_STATS}|{MENU_SETTINGS})$"))
        application.add_handler(CallbackQueryHandler(handle_emergency_help, pattern=f"^{EMERGENCY_HELP}$"))
        application.add_handler(MessageHandler(filters.VOICE, handle_voice))
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
        application.add_handler(CallbackQueryHandler(handle_main_menu, pattern="^main_menu$"))
        application.add_handler(CallbackQueryHandler(handle_talk_to_mary, pattern="^talk_to_mary$"))

        print("ü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ú—ç—Ä–∏ –ü. —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º...")
        print("‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        print("üì± –ù–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞ –≤ Telegram –∏ –Ω–∞–∂–º–∏—Ç–µ /start")
        print("üîç –ü–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏ –±—É–¥—É—Ç –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å")
        print("üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        application.run_polling(allowed_updates=Update.ALL_TYPES)
        
    except KeyboardInterrupt:
        print("\nüõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥")

if __name__ == '__main__':
    main() 