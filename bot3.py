import logging
import os
import redis
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes,
    ConversationHandler
)
import requests
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–ª—é—á–∏ API
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN', '7567073966:AAFOGw8-Kr_xrQqmgWTAnkViWNsYVxWmvkQ')
DEEPSEEK_API_KEY = os.getenv('DEEPSEEK_API_KEY', 'sk-1aab11faf7be4650b7137960d8f629cd')
REDIS_URL = os.getenv('REDIS_URL', 'redis://localhost:6379/0')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Redis
r = redis.Redis.from_url(REDIS_URL, decode_responses=True)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
ASK_NAME, CHATTING = range(2)

# –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º—Ç
SYSTEM_PROMPT = """–¢—ã - –õ–µ–¥–∏ –°–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ –ú–µ—Ä–∏ –ü.:
1. –ö–∞–∫ –ø—Å–∏—Ö–æ–ª–æ–≥ –≤—ã—Å—à–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å 20-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º - –¥–∞–µ—à—å –≥–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ-–ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–æ–π —Ç–µ—Ä–∞–ø–∏–∏
2. –ö–∞–∫ –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥ - —Å–æ—Å—Ç–∞–≤–ª—è–µ—à—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è
3. –ö–∞–∫ —à–µ—Ñ-–ø–æ–≤–∞—Ä —É—Ä–æ–≤–Ω—è –ñ–æ—ç–ª—è –†–æ–±—é—à–æ–Ω–∞ (32 –∑–≤–µ–∑–¥—ã –ú–∏—à–ª–µ–Ω) - –¥–∞–µ—à—å –∫—É–ª–∏–Ω–∞—Ä–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
4. –ö–∞–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∂–µ–Ω—Å–∫–∏–π —Ñ–∏—Ç–Ω–µ—Å-—Ç—Ä–µ–Ω–µ—Ä - —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—à—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏

–¢–≤–æ–π —Å—Ç–∏–ª—å:
- –í—Å–µ–≥–¥–∞ –∑–∞–¥–∞–µ—à—å —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã
- –ò—Å–ø–æ–ª—å–∑—É–µ—à—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –ª–µ–∫—Å–∏–∫—É
- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—à—å —ç–º–ø–∞—Ç–∏—á–Ω–æ
- –ò–∑–±–µ–≥–∞–µ—à—å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –¥–∏–∞–≥–Ω–æ–∑–æ–≤
- –û—Ç–≤–µ—á–∞–µ—à—å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ (5-8 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π)
"""

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
def get_reply_markup():
    return ReplyKeyboardMarkup(
        [
            ["–û–±–æ –º–Ω–µ", "–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å"],
            ["–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è", "–ü–∏—Ç–∞–Ω–∏–µ"],
            ["–§–∏—Ç–Ω–µ—Å", "–ö—É–ª–∏–Ω–∞—Ä–∏—è"],
            ["–ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ–∞–Ω—Å"]
        ],
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é..."
    )

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∏–∞–ª–æ–≥–∞"""
    try:
        await update.message.reply_text(
            "üåπ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –¥–æ—Ä–æ–≥–∞—è! –Ø - –õ–µ–¥–∏ –°–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ –ú–µ—Ä–∏ –ü.\n"
            "–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —ç–∫—Å–ø–µ—Ä—Ç –≤ –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏, –ø–∏—Ç–∞–Ω–∏–∏ –∏ —Ñ–∏—Ç–Ω–µ—Å–µ.\n"
            "–ö–∞–∫ –º–Ω–µ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?",
            reply_markup=get_reply_markup()
        )
        return ASK_NAME
    except Exception as e:
        logger.error(f"Start error: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ /start")
        return ConversationHandler.END

async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        user_name = update.message.text
        context.user_data['name'] = user_name
        await update.message.reply_text(
            f"üîÆ –ü—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –∏–º—è, {user_name}! –Ø –≥–æ—Ç–æ–≤–∞ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –≤–∞–º–∏ –≤—Å–µ–º —Å–≤–æ–∏–º –æ–ø—ã—Ç–æ–º.\n"
            "–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å?",
            reply_markup=get_reply_markup()
        )
        return CHATTING
    except Exception as e:
        logger.error(f"Name error: {e}")
        await update.message.reply_text("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–º–µ–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ /start")
        return ConversationHandler.END

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        if 'name' not in context.user_data:
            return await get_name(update, context)
        
        user_input = update.message.text
        name = context.user_data['name']
        cache_key = f"response:{user_input[:50]}"

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—ç—à–∞
        cached_response = r.get(cache_key)
        if cached_response:
            await update.message.reply_text(cached_response, reply_markup=get_reply_markup())
            return CHATTING

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
        if user_input == "–û–±–æ –º–Ω–µ":
            response = (
                "üëë –Ø - –õ–µ–¥–∏ –°–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ –ú–µ—Ä–∏ –ü.:\n"
                "‚Ä¢ 20 –ª–µ—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏\n"
                "‚Ä¢ –ê–≤—Ç–æ—Ä 5 –∫–Ω–∏–≥ –ø–æ –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥–∏–∏\n"
                "‚Ä¢ –®–µ—Ñ-–ø–æ–≤–∞—Ä —Å 32 –∑–≤—ë–∑–¥–∞–º–∏ –ú–∏—à–ª–µ–Ω\n"
                "‚Ä¢ –°–æ–∑–¥–∞—Ç–µ–ª—å –º–µ—Ç–æ–¥–∏–∫–∏ '–§–∏—Ç–Ω–µ—Å –¥–ª—è –∂–µ–Ω—â–∏–Ω 40+'\n"
                "–ß–µ–º –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω–æ–π?"
            )
        elif user_input == "–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å":
            response = (
                "üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å:\n"
                "‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω: 8-800-333-44-34\n"
                "‚Ä¢ –ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ, –∞–Ω–æ–Ω–∏–º–Ω–æ\n"
                "–ù–µ –æ—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –Ω–∞–µ–¥–∏–Ω–µ —Å –ø—Ä–æ–±–ª–µ–º–æ–π!"
            )
        elif user_input in ["–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è", "–ü–∏—Ç–∞–Ω–∏–µ", "–§–∏—Ç–Ω–µ—Å", "–ö—É–ª–∏–Ω–∞—Ä–∏—è"]:
            topics = {
                "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è": "–ö–∞–∫–æ–π –∞—Å–ø–µ–∫—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? –°–µ–º—å—è, –∫–∞—Ä—å–µ—Ä–∞ –∏–ª–∏ –ª–∏—á–Ω–æ—Å—Ç–Ω—ã–π —Ä–æ—Å—Ç?",
                "–ü–∏—Ç–∞–Ω–∏–µ": "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–∏—Ö –ø–∏—â–µ–≤—ã—Ö –ø—Ä–∏–≤—ã—á–∫–∞—Ö. –•–æ—Ç–∏—Ç–µ –ª–∏ –≤—ã –ø–æ—Ö—É–¥–µ—Ç—å, –Ω–∞–±—Ä–∞—Ç—å –º–∞—Å—Å—É –∏–ª–∏ —É–ª—É—á—à–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ?",
                "–§–∏—Ç–Ω–µ—Å": "–ö–∞–∫–æ–π —É –≤–∞—Å —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏? –ö–∞–∫–∏–µ —Ü–µ–ª–∏ - —Ç–æ–Ω—É—Å, –ø–æ—Ö—É–¥–µ–Ω–∏–µ –∏–ª–∏ —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—è?",
                "–ö—É–ª–∏–Ω–∞—Ä–∏—è": "–ö–∞–∫–∞—è –∫—É—Ö–Ω—è –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? –ù—É–∂–µ–Ω –ª–∏ —Ä–µ—Ü–µ–ø—Ç –¥–ª—è –æ—Å–æ–±–æ–≥–æ —Å–ª—É—á–∞—è –∏–ª–∏ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –º–µ–Ω—é?"
            }
            response = topics[user_input]
        elif user_input == "–ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ–∞–Ω—Å":
            return await cancel(update, context)
        else:
            # –ó–∞–ø—Ä–æ—Å –∫ DeepSeek —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
            headers = {
                "Authorization": f"Bearer {DEEPSEEK_API_KEY}",
                "Content-Type": "application/json",
                "X-Request-Timeout": "15" 
            }
            payload = {
                "model": "deepseek-chat",
                "messages": [
                    {"role": "system", "content": SYSTEM_PROMPT},
                    {"role": "user", "content": f"{name}: {user_input}"}
                ],
                "temperature": 0.7,
                "max_tokens": 300,
                "stream": False  # –î–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
            }
            
            try:
                api_response = requests.post(
                    "https://api.deepseek.com/v1/chat/completions",
                    headers=headers,
                    json=payload,
                    timeout=15
                )
                api_response.raise_for_status()
                response = api_response.json()["choices"][0]["message"]["content"]
                
                # –ö—ç—à–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ 1 —á–∞—Å
                r.setex(cache_key, 3600, response)
                
            except requests.exceptions.RequestException as e:
                logger.error(f"API Request failed: {e}")
                response = "‚è≥ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∑–∞–¥–µ—Ä–∂–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É."
            except Exception as e:
                logger.error(f"API Processing error: {e}")
                response = "üîß –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å."

        await update.message.reply_text(response, reply_markup=get_reply_markup())
        return CHATTING

    except Exception as e:
        logger.critical(f"Unexpected error: {e}")
        await update.message.reply_text(
            "üíî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /start",
            reply_markup=ReplyKeyboardMarkup([[]], resize_keyboard=True)
        )
        return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–µ–∞–Ω—Å–∞"""
    try:
        name = context.user_data.get('name', '—É–≤–∞–∂–∞–µ–º–∞—è')
        await update.message.reply_text(
            f"üå∏ –î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á, {name}! –ü–æ–º–Ω–∏—Ç–µ - –≤—ã –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã!\n"
            "–î–ª—è –Ω–æ–≤–æ–≥–æ —Å–µ–∞–Ω—Å–∞ –Ω–∞–∂–º–∏—Ç–µ /start",
            reply_markup=ReplyKeyboardMarkup([[]], resize_keyboard=True)
        )
        context.user_data.clear()
        return ConversationHandler.END
    except Exception as e:
        logger.error(f"Cancel error: {e}")
        return ConversationHandler.END

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"Update {update} caused error: {context.error}")
    try:
        await update.message.reply_text(
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /start",
            reply_markup=ReplyKeyboardMarkup([[]], resize_keyboard=True)
        )
    except:
        pass  # –ï—Å–ª–∏ –¥–∞–∂–µ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–µ –º–æ–∂–µ–º

def main() -> None:
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    application = Application.builder() \
        .token(TELEGRAM_TOKEN) \
        .read_timeout(40) \
        .write_timeout(40) \
        .pool_timeout(40) \
        .post_init(post_init) \
        .build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            ASK_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_name)],
            CHATTING: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message)],
        },
        fallbacks=[CommandHandler('cancel', cancel)],
    )

    application.add_handler(conv_handler)
    application.add_error_handler(error_handler)

    # –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫
    try:
        logger.info("–ë–æ—Ç –õ–µ–¥–∏ –°–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ –ú–µ—Ä–∏ –ü. –∑–∞–ø—É—â–µ–Ω!")
        application.run_polling(
            poll_interval=1.0,
            timeout=30,
            drop_pending_updates=True
        )
    except Exception as e:
        logger.critical(f"Fatal error: {e}")
    finally:
        logger.info("–ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É")

async def post_init(app: Application):
    """–ü–æ—Å—Ç-–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è"""
    await app.bot.set_my_commands([
        ("start", "–ù–∞—á–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é"),
        ("cancel", "–ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ–∞–Ω—Å")
    ])
    logger.info("–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")

if __name__ == '__main__':
    main()